<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetCoreApiDemo</name>
    </assembly>
    <members>
        <member name="T:NetCoreApiDemo.Controllers.BaseController">
            <summary>
            Base
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.Controllers.LoginController">
            <summary>
            首页
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Controllers.LoginController.Login(NetCoreApiDemo.Models.RoleModel)">
            <summary>
            登录获取Token
            </summary>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Controllers.LoginController.ParseToken">
            <summary>
            解析Token
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetCoreApiDemo.Controllers.TestController">
            <summary>
            测试API
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Controllers.TestController.#ctor(Microsoft.Extensions.Logging.ILogger{NetCoreApiDemo.Controllers.TestController},Microsoft.Extensions.Options.IOptions{NetCoreApiDemo.Models.OperationModel},Microsoft.Extensions.Options.IOptionsSnapshot{NetCoreApiDemo.Models.OperationModel},Microsoft.Extensions.Options.IOptionsMonitor{NetCoreApiDemo.Models.OperationModel})">
            <summary>
            构造函数
            </summary>
            <param name="logger"></param>
            <param name="options"></param>
            <param name="snapshot"></param>
            <param name="monitor"></param>
        </member>
        <member name="M:NetCoreApiDemo.Controllers.TestController.WriteLog">
            <summary>
            日志测试
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Controllers.TestController.Get">
            <summary>
            获取IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Controllers.TestController.Get(System.Int32)">
            <summary>
            获取传入参数id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Controllers.TestController.GetCookie(System.String)">
            <summary>
            获取Cookie
            </summary>
            <param name="key">Cookie名称</param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Controllers.TestController.SetCookie(System.String)">
            <summary>
            设置Cookie
            </summary>
            <param name="key">Cookie名称</param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Controllers.TestController.RemoveCookie(System.String)">
            <summary>
            移除Cookie
            </summary>
            <param name="key">Cookie名称</param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Controllers.TestController.GetDataBase">
            <summary>
            获取数据库配置信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Controllers.TestController.GetScope(NetCoreApiDemo.Services.ITestSingleton,NetCoreApiDemo.Services.ITestSingleton,NetCoreApiDemo.Services.ITestScoped,NetCoreApiDemo.Services.ITestScoped,NetCoreApiDemo.Services.ITestTransient,NetCoreApiDemo.Services.ITestTransient)">
            <summary>
            依赖注入作用域
            </summary>
            <param name="testSingleton"></param>
            <param name="testSingleton1"></param>
            <param name="testScoped"></param>
            <param name="testScoped1"></param>
            <param name="testTransient"></param>
            <param name="testTransient1"></param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Controllers.TestController.Post(NetCoreApiDemo.Models.RoleModel)">
            <summary>
            POST
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:NetCoreApiDemo.Controllers.TestController.Put(System.Int32,System.String)">
            <summary>
            Put
            </summary>
            <param name="id"></param>
            <param name="value"></param>
        </member>
        <member name="T:NetCoreApiDemo.Enumeration.ExpireType">
            <summary>
            Cookie过期类型枚举
            </summary>
        </member>
        <member name="F:NetCoreApiDemo.Enumeration.ExpireType.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="F:NetCoreApiDemo.Enumeration.ExpireType.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="F:NetCoreApiDemo.Enumeration.ExpireType.Day">
            <summary>
            日
            </summary>
        </member>
        <member name="F:NetCoreApiDemo.Enumeration.ExpireType.Hour">
            <summary>
            时
            </summary>
        </member>
        <member name="F:NetCoreApiDemo.Enumeration.ExpireType.Minute">
            <summary>
            分
            </summary>
        </member>
        <member name="F:NetCoreApiDemo.Enumeration.ExpireType.Second">
            <summary>
            秒
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.Enumeration.DbType">
            <summary>
            数据库类型枚举
            </summary>
        </member>
        <member name="F:NetCoreApiDemo.Enumeration.DbType.MsSqlServer">
            <summary>
            MsSqlServer
            </summary>
        </member>
        <member name="F:NetCoreApiDemo.Enumeration.DbType.MySql">
            <summary>
            MySql
            </summary>
        </member>
        <member name="F:NetCoreApiDemo.Enumeration.DbType.Oracle">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="F:NetCoreApiDemo.Enumeration.DbType.SqLite">
            <summary>
            SqLite
            </summary>
        </member>
        <member name="F:NetCoreApiDemo.Enumeration.DbType.PostGreSql">
            <summary>
            PostGreSQL
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.Extensions.DateTimeExtension">
            <summary>
            时间DateTime扩展类
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Extensions.DateTimeExtension.ToFormatString(System.DateTime,System.String)">
            <summary>
            格式化时间格式 yyyy-MM-dd hh:mm:ss
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetCoreApiDemo.Extensions.ExceptionExtension">
            <summary>
            异常扩展
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Extensions.ExceptionExtension.ErrorMessage(System.Exception)">
            <summary>
            扩展方法获取Message和StackTrace
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="T:NetCoreApiDemo.Extensions.ObjectExtension">
            <summary>
            Object 扩展
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Extensions.ObjectExtension.NotNull(System.Object)">
            <summary>
            非NULL或""或WhiteSpace
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Extensions.ObjectExtension.Null(System.Object)">
            <summary>
            NULL、""、WhiteSpace
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Extensions.ObjectExtension.ToJson(System.Object)">
            <summary>
            Object To Json
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Extensions.ObjectExtension.ToObject``1(System.String)">
            <summary>
            Json To Object
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="T:NetCoreApiDemo.Extensions.SessionExtension">
            <summary>
            Session 扩展类
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Extensions.SessionExtension.SetObject``1(Microsoft.AspNetCore.Http.ISession,System.String,``0)">
            <summary>
            设置泛型Session
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:NetCoreApiDemo.Extensions.SessionExtension.GetObject``1(Microsoft.AspNetCore.Http.ISession,System.String)">
            <summary>
            获取泛型Session
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:NetCoreApiDemo.Helpers.AppConfig">
            <summary>
            配置文件读取帮助类
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Helpers.AppConfig.Configure(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            获取配置项
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:NetCoreApiDemo.Helpers.AppConfig.DbType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.Helpers.AppConfig.SqlConnStr">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.Helpers.AppConfig.Issuer">
            <summary>
            发行人
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.Helpers.AppConfig.Audience">
            <summary>
            使用者
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.Helpers.AppConfig.SecretKey">
            <summary>
            密钥
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.Helpers.AppConfig.Expire">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Helpers.AppConfig.GetAppValue(System.String[])">
            <summary>
            封装要操作的字符
            </summary>
            <param name="sections">节点配置</param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Helpers.AppConfig.SetAppValue(System.String[],System.String)">
            <summary>
            封装要操作的字符
            </summary>
            <param name="sections">节点配置,最大 10 个节点</param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NetCoreApiDemo.Helpers.CookieHelper">
            <summary>
            Cookie帮助类
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Helpers.CookieHelper.Get(System.String)">
            <summary>
            获取Cookie
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Helpers.CookieHelper.Set(System.String,System.String)">
            <summary>
            设置Cookie
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Helpers.CookieHelper.Set(System.String,System.String,System.Int32,NetCoreApiDemo.Enumeration.ExpireType)">
            <summary>
            设置Cookie
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="expire">过期时间</param>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Helpers.CookieHelper.Remove(System.String)">
            <summary>
            清除Cookie
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:NetCoreApiDemo.Helpers.HttpContextHelper">
            <summary>
            静态类中获取HttpContext上下文
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Helpers.HttpContextHelper.Configure(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            注入IHttpContextAccessor获取HttpContext上下文
            </summary>
            <param name="contextAccessor"></param>
        </member>
        <member name="P:NetCoreApiDemo.Helpers.HttpContextHelper.Current">
            <summary>
            HttpContext上下文
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.Helpers.JwtHelper">
            <summary>
            JWT 帮助类
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Helpers.JwtHelper.GenerateJwt(System.Collections.Generic.IEnumerable{System.String},NetCoreApiDemo.Models.JwtTokenPayload)">
            <summary>
            颁发JWT字符串
            </summary>
            <param name="userRoles"></param>
            <param name="payload"></param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Helpers.JwtHelper.ValidateJwt(System.String)">
            <summary>
            解析
            </summary>
            <param name="jwtToken"></param>
            <returns></returns>
        </member>
        <member name="T:NetCoreApiDemo.Helpers.SessionHelper">
            <summary>
            Session 帮助类
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Helpers.SessionHelper.Get(System.String)">
            <summary>
            获取Session
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Helpers.SessionHelper.Get``1(System.String)">
            <summary>
            获取Session
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Helpers.SessionHelper.Set(System.String,System.String)">
            <summary>
            设置Session
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Helpers.SessionHelper.Set``1(System.String,``0)">
            <summary>
            设置Session
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Helpers.SessionHelper.Remove(System.String)">
            <summary>
            移除Session
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:NetCoreApiDemo.HttpResponse.HttpResponseResult`1">
            <summary>
            响应数据输出
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.HttpResponse.HttpResponseResult`1.Code">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.HttpResponse.HttpResponseResult`1.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.HttpResponse.HttpResponseResult`1.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.HttpResponse.HttpResponseResult`1.Success(`0,System.String)">
            <summary>
            成功
            </summary>
            <param name="data">数据</param>
            <param name="msg">消息</param>
        </member>
        <member name="M:NetCoreApiDemo.HttpResponse.HttpResponseResult`1.Fail(System.Int32,System.String,`0)">
            <summary>
            失败
            </summary>
            <param name="code">状态码</param>
            <param name="msg">消息</param>
            <param name="data">数据</param>
            <returns></returns>
        </member>
        <member name="T:NetCoreApiDemo.HttpResponse.HttpResponseResult">
            <summary>
            响应数据静态输出
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.HttpResponse.HttpResponseResult.Success``1(``0,System.String)">
            <summary>
            成功
            </summary>
            <param name="data">数据</param>
            <param name="msg">消息</param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.HttpResponse.HttpResponseResult.Success">
            <summary>
            成功
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.HttpResponse.HttpResponseResult.Fail``1(System.Int32,System.String,``0)">
            <summary>
            失败
            </summary>
            <param name="code">状态码</param>
            <param name="msg">消息</param>
            <param name="data">数据</param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.HttpResponse.HttpResponseResult.Fail(System.Int32,System.String)">
            <summary>
            失败
            </summary>
            <param name="code">状态码</param>
            <param name="msg">消息</param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.HttpResponse.HttpResponseResult.Result``1(System.Boolean)">
            <summary>
            根据布尔值返回结果
            </summary>
            <param name="success"></param>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.HttpResponse.HttpResponseResult.Result(System.Boolean)">
            <summary>
            根据布尔值返回结果
            </summary>
            <param name="success"></param>
            <returns></returns>
        </member>
        <member name="T:NetCoreApiDemo.HttpResponse.IHttpResponseResult">
            <summary>
            响应数据输出接口
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.HttpResponse.IHttpResponseResult.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.HttpResponse.IHttpResponseResult`1">
            <summary>
            响应数据输出泛型接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:NetCoreApiDemo.HttpResponse.IHttpResponseResult`1.Data">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.MiddlewareExtensions.AuthorizationMiddleware">
            <summary>
            JWT授权中间件
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.MiddlewareExtensions.AuthorizationMiddleware.AddAuthorizationService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注册授权服务
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:NetCoreApiDemo.Models.JwtTokenPayload">
            <summary>
            Jwt Token Payload
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.Models.JwtTokenPayload.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.Models.JwtTokenPayload.UserName">
            <summary>
            UserName
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.Models.JwtTokenPayload.UserRoles">
            <summary>
            UserRoles
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.Models.OperationModel">
            <summary>
            Options 操作Model
            </summary>
        </member>
        <member name="F:NetCoreApiDemo.Models.OperationModel.Model">
            <summary>
            Model
            </summary>
        </member>
        <member name="F:NetCoreApiDemo.Models.OperationModel.User">
            <summary>
            User
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.Models.OperationModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.Models.OperationModel.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.Models.RoleModel">
            <summary>
            用户角色
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.Models.RoleModel.UserRoles">
            <summary>
            角色
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.Models.UserModel">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.Models.UserModel.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:NetCoreApiDemo.Models.UserModel.UserName">
            <summary>
            UserName
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.Program">
            <summary>
            程序入口
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Program.Main(System.String[])">
            <summary>
            程序主方法
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:NetCoreApiDemo.Program.CreateHostBuilder(System.String[])">
            <summary>
            构建主机
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:NetCoreApiDemo.Services.ITestScoped">
            <summary>
            范围单例
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Services.ITestScoped.Print">
            <summary>
            打印
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.Services.TestScoped">
            <summary>
            范围单例
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Services.TestScoped.Print">
            <summary>
            打印
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Services.TestScoped.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.Services.ITestService">
            <summary>
            测试接口
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Services.ITestService.Message(System.String)">
            <summary>
            获取Message
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetCoreApiDemo.Services.TestService">
            <summary>
            测试类
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Services.TestService.Message(System.String)">
            <summary>
            获取Message
            </summary>
            <returns></returns>
        </member>
        <member name="T:NetCoreApiDemo.Services.ITestSingleton">
            <summary>
            全局单例
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Services.ITestSingleton.Print">
            <summary>
            打印
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.Services.TestSingleton">
            <summary>
            全局单例
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Services.TestSingleton.Print">
            <summary>
            打印
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Services.TestSingleton.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.Services.ITestTransient">
            <summary>
            瞬时单例
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Services.ITestTransient.Print">
            <summary>
            打印
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.Services.TestTransient">
            <summary>
            瞬时单例
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Services.TestTransient.Print">
            <summary>
            打印
            </summary>
            <returns></returns>
        </member>
        <member name="M:NetCoreApiDemo.Services.TestTransient.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:NetCoreApiDemo.Startup">
            <summary>
            启动类，当没有配置 ASPNETCORE_ENVIRONMENT 没有设置时或找不到启动类时才会启动
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            构造函数
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:NetCoreApiDemo.Startup.Configuration">
            <summary>
            配置项
            </summary>
        </member>
        <member name="F:NetCoreApiDemo.Startup.DefaultCorsPolicyName">
            <summary>
            跨域配置名称
            </summary>
        </member>
        <member name="M:NetCoreApiDemo.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:NetCoreApiDemo.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,NetCoreApiDemo.Services.ITestService)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="testService"></param>
        </member>
    </members>
</doc>
